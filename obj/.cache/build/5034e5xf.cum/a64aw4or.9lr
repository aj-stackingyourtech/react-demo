<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class Pool
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class Pool
   ">
    <meta name="generator" content="docfx 2.58.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="Pool">
  
  
  <h1 id="Pool" data-uid="Pool">Class Pool
  </h1>
  <div class="markdown level0 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Class representing a Pool.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <h4 id="Pool__ctor" data-uid="Pool.#ctor">Pool(client)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Create a Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">new Pool(client)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">undefinedBatchServiceClient</span></td>
        <td><em>client</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Reference to the service client.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h3 id="functions">Functions
  </h3>
  
  
  <h4 id="Pool_listUsageMetricsWithHttpOperationResponse" data-uid="Pool#listUsageMetricsWithHttpOperationResponse">listUsageMetricsWithHttpOperationResponse(options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists the usage metrics, aggregated by Pool across individual time
intervals, for the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">If you do not specify a $filter clause including a poolId, the response
includes all Pools that existed in the Account in the time range of the
returned aggregation intervals. If you do not specify a $filter clause
including a startTime or endTime these filters default to the start and end
times of the last aggregation interval currently available; that is, only
the last aggregation interval is returned.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listUsageMetricsWithHttpOperationResponse(options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListUsageMetricsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listUsageMetrics" data-uid="Pool#listUsageMetrics">listUsageMetrics(options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists the usage metrics, aggregated by Pool across individual time
intervals, for the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">If you do not specify a $filter clause including a poolId, the response
includes all Pools that existed in the Account in the time range of the
returned aggregation intervals. If you do not specify a $filter clause
including a startTime or endTime these filters default to the start and end
times of the last aggregation interval currently available; that is, only
the last aggregation interval is returned.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listUsageMetrics(options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListUsageMetricsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_getAllLifetimeStatisticsWithHttpOperationResponse" data-uid="Pool#getAllLifetimeStatisticsWithHttpOperationResponse">getAllLifetimeStatisticsWithHttpOperationResponse(options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets lifetime summary statistics for all of the Pools in the
specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">Statistics are aggregated across all Pools that have ever existed in the
Account, from Account creation to the last update time of the statistics.
The statistics may not be immediately available. The Batch service performs
periodic roll-up of statistics. The typical delay is about 30 minutes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function getAllLifetimeStatisticsWithHttpOperationResponse(options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolGetAllLifetimeStatisticsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_getAllLifetimeStatistics" data-uid="Pool#getAllLifetimeStatistics">getAllLifetimeStatistics(options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets lifetime summary statistics for all of the Pools in the
specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">Statistics are aggregated across all Pools that have ever existed in the
Account, from Account creation to the last update time of the statistics.
The statistics may not be immediately available. The Batch service performs
periodic roll-up of statistics. The typical delay is about 30 minutes.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function getAllLifetimeStatistics(options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolGetAllLifetimeStatisticsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_addWithHttpOperationResponse" data-uid="Pool#addWithHttpOperationResponse">addWithHttpOperationResponse(pool, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Adds a Pool to the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">When naming Pools, avoid including sensitive information such as user names
or secret project names. This information may appear in telemetry logs
accessible to Microsoft Support engineers.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function addWithHttpOperationResponse(pool, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>pool</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The Pool to be added.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">id</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A string that uniquely identifies the Pool within
the Account. The ID can contain any combination of alphanumeric characters
including hyphens and underscores, and cannot contain more than 64
characters. The ID is case-preserving and case-insensitive (that is, you may
not have two Pool IDs within an Account that differ only by case).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">displayName</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The display name for the Pool. The
display name need not be unique and can contain any Unicode characters up to
a maximum length of 1024.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">vmSize</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The size of virtual machines in the Pool. All
virtual machines in a Pool are the same size. For information about
available sizes of virtual machines for Cloud Services Pools (pools created
with cloudServiceConfiguration), see Sizes for Cloud Services
(<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/" sourcefile="yml/Pool.yml" sourcestartlinenumber="5">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>).
Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.
For information about available VM sizes for Pools using Images from the
Virtual Machines Marketplace (pools created with
virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
(<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/" sourcefile="yml/Pool.yml" sourcestartlinenumber="10">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>)
or Sizes for Virtual Machines (Windows)
(<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/" sourcefile="yml/Pool.yml" sourcestartlinenumber="12">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>).
Batch supports all Azure VM sizes except STANDARD_A0 and those with premium
storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">cloudServiceConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The cloud service
configuration for the Pool. This property and virtualMachineConfiguration
are mutually exclusive and one of the properties must be specified. This
property cannot be specified if the Batch Account was created with its
poolAllocationMode property set to 'UserSubscription'.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">virtualMachineConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The virtual machine
configuration for the Pool. This property and cloudServiceConfiguration are
mutually exclusive and one of the properties must be specified.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for allocation of
Compute Nodes to the Pool. This timeout applies only to manual scaling; it
has no effect when enableAutoScale is set to true. The default value is 15
minutes. The minimum value is 5 minutes. If you specify a value less than 5
minutes, the Batch service returns an error; if you are calling the REST API
directly, the HTTP status code is 400 (Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetDedicatedNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired number of dedicated
Compute Nodes in the Pool. This property must not be specified if
enableAutoScale is set to true. If enableAutoScale is set to false, then you
must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetLowPriorityNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired number of
low-priority Compute Nodes in the Pool. This property must not be specified
if enableAutoScale is set to true. If enableAutoScale is set to false, then
you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">boolean</span></td>
                <td><em class="text-break">enableAutoScale</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Whether the Pool size should
automatically adjust over time. If false, at least one of
targetDedicateNodes and targetLowPriorityNodes must be specified. If true,
the autoScaleFormula property is required and the Pool automatically resizes
according to the formula. The default value is false.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">autoScaleFormula</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A formula for the desired number of
Compute Nodes in the Pool. This property must not be specified if
enableAutoScale is set to false. It is required if enableAutoScale is set to
true. The formula is checked for validity before the Pool is created. If the
formula is not valid, the Batch service rejects the request with detailed
error information. For more information about specifying this formula, see
'Automatically scale Compute Nodes in an Azure Batch Pool'
(<a href="https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/" sourcefile="yml/Pool.yml" sourcestartlinenumber="8">https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/</a>).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">autoScaleEvaluationInterval</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The time
interval at which to automatically adjust the Pool size according to the
autoscale formula. The default value is 15 minutes. The minimum and maximum
value are 5 minutes and 168 hours respectively. If you specify a value less
than 5 minutes or greater than 168 hours, the Batch service returns an
error; if you are calling the REST API directly, the HTTP status code is 400
(Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">boolean</span></td>
                <td><em class="text-break">enableInterNodeCommunication</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Whether the Pool
permits direct communication between Compute Nodes. Enabling inter-node
communication limits the maximum size of the Pool due to deployment
restrictions on the Compute Nodes of the Pool. This may result in the Pool
not reaching its desired size. The default value is false.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">networkConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The network configuration for
the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task specified to run on each Compute
Node as it joins the Pool. The Task runs when the Compute Node is added to
the Pool or when the Compute Node is restarted.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Certificates to be
installed on each Compute Node in the Pool. For Windows Nodes, the Batch
service installs the Certificates to the specified Certificate store and
location. For Linux Compute Nodes, the Certificates are stored in a
directory inside the Task working directory and an environment variable
AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
location. For Certificates with visibility of 'remoteUser', a 'certs'
directory is created in the user's home directory (e.g.,
/home/{user-name}/certs) and Certificates are placed in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Packages to
be installed on each Compute Node in the Pool. Changes to Package references
affect all new Nodes joining the Pool, but do not affect Compute Nodes that
are already in the Pool until they are rebooted or reimaged. There is a
maximum of 10 Package references on any given Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationLicenses</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of application licenses
the Batch service will make available on each Compute Node in the Pool. The
list of application licenses must be a subset of available Batch service
application licenses. If a license is requested which is not supported, Pool
creation will fail.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">maxTasksPerNode</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The maximum number of Tasks that can
run concurrently on a single Compute Node in the Pool. The default value is</p>
<ol sourcefile="yml/Pool.yml" sourcestartlinenumber="3">
<li sourcefile="yml/Pool.yml" sourcestartlinenumber="3">The maximum value is the smaller of 4 times the number of cores of the
vmSize of the Pool or 256.</li>
</ol>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">taskSchedulingPolicy</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">How Tasks are distributed across
Compute Nodes in a Pool. If not specified, the default is spread.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">userAccounts</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of user Accounts to be created
on each Compute Node in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value pairs associated with
the Pool as metadata. The Batch service does not assign any meaning to
metadata; it is solely for the use of user code.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">mountConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Mount storage using specified file
system for the entire lifetime of the pool. Mount the storage using Azure
fileshare, NFS, CIFS or Blobfuse based file system.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolAddOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_add" data-uid="Pool#add">add(pool, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Adds a Pool to the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">When naming Pools, avoid including sensitive information such as user names
or secret project names. This information may appear in telemetry logs
accessible to Microsoft Support engineers.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function add(pool, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>pool</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The Pool to be added.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">id</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A string that uniquely identifies the Pool within
the Account. The ID can contain any combination of alphanumeric characters
including hyphens and underscores, and cannot contain more than 64
characters. The ID is case-preserving and case-insensitive (that is, you may
not have two Pool IDs within an Account that differ only by case).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">displayName</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The display name for the Pool. The
display name need not be unique and can contain any Unicode characters up to
a maximum length of 1024.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">vmSize</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The size of virtual machines in the Pool. All
virtual machines in a Pool are the same size. For information about
available sizes of virtual machines for Cloud Services Pools (pools created
with cloudServiceConfiguration), see Sizes for Cloud Services
(<a href="https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/" sourcefile="yml/Pool.yml" sourcestartlinenumber="5">https://azure.microsoft.com/documentation/articles/cloud-services-sizes-specs/</a>).
Batch supports all Cloud Services VM sizes except ExtraSmall, A1V2 and A2V2.
For information about available VM sizes for Pools using Images from the
Virtual Machines Marketplace (pools created with
virtualMachineConfiguration) see Sizes for Virtual Machines (Linux)
(<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/" sourcefile="yml/Pool.yml" sourcestartlinenumber="10">https://azure.microsoft.com/documentation/articles/virtual-machines-linux-sizes/</a>)
or Sizes for Virtual Machines (Windows)
(<a href="https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/" sourcefile="yml/Pool.yml" sourcestartlinenumber="12">https://azure.microsoft.com/documentation/articles/virtual-machines-windows-sizes/</a>).
Batch supports all Azure VM sizes except STANDARD_A0 and those with premium
storage (STANDARD_GS, STANDARD_DS, and STANDARD_DSV2 series).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">cloudServiceConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The cloud service
configuration for the Pool. This property and virtualMachineConfiguration
are mutually exclusive and one of the properties must be specified. This
property cannot be specified if the Batch Account was created with its
poolAllocationMode property set to 'UserSubscription'.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">virtualMachineConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The virtual machine
configuration for the Pool. This property and cloudServiceConfiguration are
mutually exclusive and one of the properties must be specified.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for allocation of
Compute Nodes to the Pool. This timeout applies only to manual scaling; it
has no effect when enableAutoScale is set to true. The default value is 15
minutes. The minimum value is 5 minutes. If you specify a value less than 5
minutes, the Batch service returns an error; if you are calling the REST API
directly, the HTTP status code is 400 (Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetDedicatedNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired number of dedicated
Compute Nodes in the Pool. This property must not be specified if
enableAutoScale is set to true. If enableAutoScale is set to false, then you
must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetLowPriorityNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired number of
low-priority Compute Nodes in the Pool. This property must not be specified
if enableAutoScale is set to true. If enableAutoScale is set to false, then
you must set either targetDedicatedNodes, targetLowPriorityNodes, or both.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">boolean</span></td>
                <td><em class="text-break">enableAutoScale</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Whether the Pool size should
automatically adjust over time. If false, at least one of
targetDedicateNodes and targetLowPriorityNodes must be specified. If true,
the autoScaleFormula property is required and the Pool automatically resizes
according to the formula. The default value is false.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">autoScaleFormula</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A formula for the desired number of
Compute Nodes in the Pool. This property must not be specified if
enableAutoScale is set to false. It is required if enableAutoScale is set to
true. The formula is checked for validity before the Pool is created. If the
formula is not valid, the Batch service rejects the request with detailed
error information. For more information about specifying this formula, see
'Automatically scale Compute Nodes in an Azure Batch Pool'
(<a href="https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/" sourcefile="yml/Pool.yml" sourcestartlinenumber="8">https://azure.microsoft.com/documentation/articles/batch-automatic-scaling/</a>).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">autoScaleEvaluationInterval</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The time
interval at which to automatically adjust the Pool size according to the
autoscale formula. The default value is 15 minutes. The minimum and maximum
value are 5 minutes and 168 hours respectively. If you specify a value less
than 5 minutes or greater than 168 hours, the Batch service returns an
error; if you are calling the REST API directly, the HTTP status code is 400
(Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">boolean</span></td>
                <td><em class="text-break">enableInterNodeCommunication</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Whether the Pool
permits direct communication between Compute Nodes. Enabling inter-node
communication limits the maximum size of the Pool due to deployment
restrictions on the Compute Nodes of the Pool. This may result in the Pool
not reaching its desired size. The default value is false.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">networkConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The network configuration for
the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task specified to run on each Compute
Node as it joins the Pool. The Task runs when the Compute Node is added to
the Pool or when the Compute Node is restarted.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Certificates to be
installed on each Compute Node in the Pool. For Windows Nodes, the Batch
service installs the Certificates to the specified Certificate store and
location. For Linux Compute Nodes, the Certificates are stored in a
directory inside the Task working directory and an environment variable
AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this
location. For Certificates with visibility of 'remoteUser', a 'certs'
directory is created in the user's home directory (e.g.,
/home/{user-name}/certs) and Certificates are placed in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Packages to
be installed on each Compute Node in the Pool. Changes to Package references
affect all new Nodes joining the Pool, but do not affect Compute Nodes that
are already in the Pool until they are rebooted or reimaged. There is a
maximum of 10 Package references on any given Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationLicenses</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of application licenses
the Batch service will make available on each Compute Node in the Pool. The
list of application licenses must be a subset of available Batch service
application licenses. If a license is requested which is not supported, Pool
creation will fail.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">maxTasksPerNode</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The maximum number of Tasks that can
run concurrently on a single Compute Node in the Pool. The default value is</p>
<ol sourcefile="yml/Pool.yml" sourcestartlinenumber="3">
<li sourcefile="yml/Pool.yml" sourcestartlinenumber="3">The maximum value is the smaller of 4 times the number of cores of the
vmSize of the Pool or 256.</li>
</ol>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">taskSchedulingPolicy</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">How Tasks are distributed across
Compute Nodes in a Pool. If not specified, the default is spread.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">userAccounts</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of user Accounts to be created
on each Compute Node in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value pairs associated with
the Pool as metadata. The Batch service does not assign any meaning to
metadata; it is solely for the use of user code.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">mountConfiguration</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Mount storage using specified file
system for the entire lifetime of the pool. Mount the storage using Azure
fileshare, NFS, CIFS or Blobfuse based file system.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolAddOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listWithHttpOperationResponse" data-uid="Pool#listWithHttpOperationResponse">listWithHttpOperationResponse(options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists all of the Pools in the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listWithHttpOperationResponse(options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_list" data-uid="Pool#list">list(options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists all of the Pools in the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function list(options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_deleteMethodWithHttpOperationResponse" data-uid="Pool#deleteMethodWithHttpOperationResponse">deleteMethodWithHttpOperationResponse(poolId, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Deletes a Pool from the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">When you request that a Pool be deleted, the following actions occur: the
Pool state is set to deleting; any ongoing resize operation on the Pool are
stopped; the Batch service starts resizing the Pool to zero Compute Nodes;
any Tasks running on existing Compute Nodes are terminated and requeued (as
if a resize Pool operation had been requested with the default requeue
option); finally, the Pool is removed from the system. Because running Tasks
are requeued, the user can rerun these Tasks by updating their Job to target
a different Pool. The Tasks can then run on the new Pool. If you want to
override the requeue behavior, then you should call resize Pool explicitly
to shrink the Pool to zero size before deleting the Pool. If you call an
Update, Patch or Delete API on a Pool in the deleting state, it will fail
with HTTP status code 409 with error code PoolBeingDeleted.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function deleteMethodWithHttpOperationResponse(poolId, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to delete.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolDeleteMethodOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_deleteMethod" data-uid="Pool#deleteMethod">deleteMethod(poolId, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Deletes a Pool from the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">When you request that a Pool be deleted, the following actions occur: the
Pool state is set to deleting; any ongoing resize operation on the Pool are
stopped; the Batch service starts resizing the Pool to zero Compute Nodes;
any Tasks running on existing Compute Nodes are terminated and requeued (as
if a resize Pool operation had been requested with the default requeue
option); finally, the Pool is removed from the system. Because running Tasks
are requeued, the user can rerun these Tasks by updating their Job to target
a different Pool. The Tasks can then run on the new Pool. If you want to
override the requeue behavior, then you should call resize Pool explicitly
to shrink the Pool to zero size before deleting the Pool. If you call an
Update, Patch or Delete API on a Pool in the deleting state, it will fail
with HTTP status code 409 with error code PoolBeingDeleted.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function deleteMethod(poolId, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to delete.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolDeleteMethodOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_existsWithHttpOperationResponse" data-uid="Pool#existsWithHttpOperationResponse">existsWithHttpOperationResponse(poolId, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets basic properties of a Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function existsWithHttpOperationResponse(poolId, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolExistsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_exists" data-uid="Pool#exists">exists(poolId, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets basic properties of a Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function exists(poolId, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolExistsOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_getWithHttpOperationResponse" data-uid="Pool#getWithHttpOperationResponse">getWithHttpOperationResponse(poolId, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets information about the specified Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function getWithHttpOperationResponse(poolId, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolGetOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_get" data-uid="Pool#get">get(poolId, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets information about the specified Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function get(poolId, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolGetOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_patchWithHttpOperationResponse" data-uid="Pool#patchWithHttpOperationResponse">patchWithHttpOperationResponse(poolId, poolPatchParameter, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Updates the properties of the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This only replaces the Pool properties specified in the request. For
example, if the Pool has a StartTask associated with it, and a request does
not specify a StartTask element, then the Pool keeps the existing StartTask.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function patchWithHttpOperationResponse(poolId, poolPatchParameter, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to update.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolPatchParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task to run on each Compute
Node as it joins the Pool. The Task runs when the Compute Node is added to
the Pool or when the Compute Node is restarted. If this element is present,
it overwrites any existing StartTask. If omitted, any existing StartTask is
left unchanged.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Certificates to be installed on each Compute Node in the Pool. If this
element is present, it replaces any existing Certificate references
configured on the Pool. If omitted, any existing Certificate references are
left unchanged. For Windows Nodes, the Batch service installs the
Certificates to the specified Certificate store and location. For Linux
Compute Nodes, the Certificates are stored in a directory inside the Task
working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
supplied to the Task to query for this location. For Certificates with
visibility of 'remoteUser', a 'certs' directory is created in the user's
home directory (e.g., /home/{user-name}/certs) and Certificates are placed
in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Packages to be installed on each Compute Node in the Pool. Changes to
Package references affect all new Nodes joining the Pool, but do not affect
Compute Nodes that are already in the Pool until they are rebooted or
reimaged. If this element is present, it replaces any existing Package
references. If you specify an empty collection, then all Package references
are removed from the Pool. If omitted, any existing Package references are
left unchanged.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value pairs
associated with the Pool as metadata. If this element is present, it
replaces any existing metadata configured on the Pool. If you specify an
empty collection, any metadata is removed from the Pool. If omitted, any
existing metadata is left unchanged.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolPatchOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_patch" data-uid="Pool#patch">patch(poolId, poolPatchParameter, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Updates the properties of the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This only replaces the Pool properties specified in the request. For
example, if the Pool has a StartTask associated with it, and a request does
not specify a StartTask element, then the Pool keeps the existing StartTask.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function patch(poolId, poolPatchParameter, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to update.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolPatchParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task to run on each Compute
Node as it joins the Pool. The Task runs when the Compute Node is added to
the Pool or when the Compute Node is restarted. If this element is present,
it overwrites any existing StartTask. If omitted, any existing StartTask is
left unchanged.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Certificates to be installed on each Compute Node in the Pool. If this
element is present, it replaces any existing Certificate references
configured on the Pool. If omitted, any existing Certificate references are
left unchanged. For Windows Nodes, the Batch service installs the
Certificates to the specified Certificate store and location. For Linux
Compute Nodes, the Certificates are stored in a directory inside the Task
working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
supplied to the Task to query for this location. For Certificates with
visibility of 'remoteUser', a 'certs' directory is created in the user's
home directory (e.g., /home/{user-name}/certs) and Certificates are placed
in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Packages to be installed on each Compute Node in the Pool. Changes to
Package references affect all new Nodes joining the Pool, but do not affect
Compute Nodes that are already in the Pool until they are rebooted or
reimaged. If this element is present, it replaces any existing Package
references. If you specify an empty collection, then all Package references
are removed from the Pool. If omitted, any existing Package references are
left unchanged.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value pairs
associated with the Pool as metadata. If this element is present, it
replaces any existing metadata configured on the Pool. If you specify an
empty collection, any metadata is removed from the Pool. If omitted, any
existing metadata is left unchanged.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolPatchOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_disableAutoScaleWithHttpOperationResponse" data-uid="Pool#disableAutoScaleWithHttpOperationResponse">disableAutoScaleWithHttpOperationResponse(poolId, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Disables automatic scaling for a Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function disableAutoScaleWithHttpOperationResponse(poolId, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to disable automatic
scaling.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolDisableAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_disableAutoScale" data-uid="Pool#disableAutoScale">disableAutoScale(poolId, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Disables automatic scaling for a Pool.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function disableAutoScale(poolId, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to disable automatic
scaling.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolDisableAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_enableAutoScaleWithHttpOperationResponse" data-uid="Pool#enableAutoScaleWithHttpOperationResponse">enableAutoScaleWithHttpOperationResponse(poolId, poolEnableAutoScaleParameter, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Enables automatic scaling for a Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">You cannot enable automatic scaling on a Pool if a resize operation is in
progress on the Pool. If automatic scaling of the Pool is currently
disabled, you must specify a valid autoscale formula as part of the request.
If automatic scaling of the Pool is already enabled, you may specify a new
autoscale formula and/or a new evaluation interval. You cannot call this API
for the same Pool more than once every 30 seconds.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function enableAutoScaleWithHttpOperationResponse(poolId, poolEnableAutoScaleParameter, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to enable automatic
scaling.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolEnableAutoScaleParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">autoScaleFormula</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The formula
for the desired number of Compute Nodes in the Pool. The formula is checked
for validity before it is applied to the Pool. If the formula is not valid,
the Batch service rejects the request with detailed error information. For
more information about specifying this formula, see Automatically scale
Compute Nodes in an Azure Batch Pool
(<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling" sourcefile="yml/Pool.yml" sourcestartlinenumber="7">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">autoScaleEvaluationInterval</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The time interval
at which to automatically adjust the Pool size according to the autoscale
formula. The default value is 15 minutes. The minimum and maximum value are
5 minutes and 168 hours respectively. If you specify a value less than 5
minutes or greater than 168 hours, the Batch service rejects the request
with an invalid property value error; if you are calling the REST API
directly, the HTTP status code is 400 (Bad Request). If you specify a new
interval, then the existing autoscale evaluation schedule will be stopped
and a new autoscale evaluation schedule will be started, with its starting
time being the time when this request was issued.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolEnableAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_enableAutoScale" data-uid="Pool#enableAutoScale">enableAutoScale(poolId, poolEnableAutoScaleParameter, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Enables automatic scaling for a Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">You cannot enable automatic scaling on a Pool if a resize operation is in
progress on the Pool. If automatic scaling of the Pool is currently
disabled, you must specify a valid autoscale formula as part of the request.
If automatic scaling of the Pool is already enabled, you may specify a new
autoscale formula and/or a new evaluation interval. You cannot call this API
for the same Pool more than once every 30 seconds.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function enableAutoScale(poolId, poolEnableAutoScaleParameter, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to enable automatic
scaling.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolEnableAutoScaleParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">autoScaleFormula</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The formula
for the desired number of Compute Nodes in the Pool. The formula is checked
for validity before it is applied to the Pool. If the formula is not valid,
the Batch service rejects the request with detailed error information. For
more information about specifying this formula, see Automatically scale
Compute Nodes in an Azure Batch Pool
(<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling" sourcefile="yml/Pool.yml" sourcestartlinenumber="7">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">autoScaleEvaluationInterval</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The time interval
at which to automatically adjust the Pool size according to the autoscale
formula. The default value is 15 minutes. The minimum and maximum value are
5 minutes and 168 hours respectively. If you specify a value less than 5
minutes or greater than 168 hours, the Batch service rejects the request
with an invalid property value error; if you are calling the REST API
directly, the HTTP status code is 400 (Bad Request). If you specify a new
interval, then the existing autoscale evaluation schedule will be stopped
and a new autoscale evaluation schedule will be started, with its starting
time being the time when this request was issued.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolEnableAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_evaluateAutoScaleWithHttpOperationResponse" data-uid="Pool#evaluateAutoScaleWithHttpOperationResponse">evaluateAutoScaleWithHttpOperationResponse(poolId, autoScaleFormula, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets the result of evaluating an automatic scaling formula on the
Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">This API is primarily for validating an autoscale formula, as it simply
returns the result without applying the formula to the Pool. The Pool must
have auto scaling enabled in order to evaluate a formula.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function evaluateAutoScaleWithHttpOperationResponse(poolId, autoScaleFormula, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to evaluate the automatic
scaling formula.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>autoScaleFormula</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The formula for the desired number of
Compute Nodes in the Pool. The formula is validated and its results
calculated, but it is not applied to the Pool. To apply the formula to the
Pool, 'Enable automatic scaling on a Pool'. For more information about
specifying this formula, see Automatically scale Compute Nodes in an Azure
Batch Pool
(<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling" sourcefile="yml/Pool.yml" sourcestartlinenumber="7">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>).</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolEvaluateAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_evaluateAutoScale" data-uid="Pool#evaluateAutoScale">evaluateAutoScale(poolId, autoScaleFormula, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Gets the result of evaluating an automatic scaling formula on the
Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">This API is primarily for validating an autoscale formula, as it simply
returns the result without applying the formula to the Pool. The Pool must
have auto scaling enabled in order to evaluate a formula.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function evaluateAutoScale(poolId, autoScaleFormula, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool on which to evaluate the automatic
scaling formula.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>autoScaleFormula</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The formula for the desired number of
Compute Nodes in the Pool. The formula is validated and its results
calculated, but it is not applied to the Pool. To apply the formula to the
Pool, 'Enable automatic scaling on a Pool'. For more information about
specifying this formula, see Automatically scale Compute Nodes in an Azure
Batch Pool
(<a href="https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling" sourcefile="yml/Pool.yml" sourcestartlinenumber="7">https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling</a>).</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolEvaluateAutoScaleOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_resizeWithHttpOperationResponse" data-uid="Pool#resizeWithHttpOperationResponse">resizeWithHttpOperationResponse(poolId, poolResizeParameter, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Changes the number of Compute Nodes that are assigned to a Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">You can only resize a Pool when its allocation state is steady. If the Pool
is already resizing, the request fails with status code 409. When you resize
a Pool, the Pool's allocation state changes from steady to resizing. You
cannot resize Pools which are configured for automatic scaling. If you try
to do this, the Batch service returns an error 409. If you resize a Pool
downwards, the Batch service chooses which Compute Nodes to remove. To
remove specific Compute Nodes, use the Pool remove Compute Nodes API
instead.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function resizeWithHttpOperationResponse(poolId, poolResizeParameter, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to resize.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolResizeParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetDedicatedNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired
number of dedicated Compute Nodes in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetLowPriorityNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired
number of low-priority Compute Nodes in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for
allocation of Nodes to the Pool or removal of Compute Nodes from the Pool.
The default value is 15 minutes. The minimum value is 5 minutes. If you
specify a value less than 5 minutes, the Batch service returns an error; if
you are calling the REST API directly, the HTTP status code is 400 (Bad
Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">nodeDeallocationOption</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Determines what
to do with a Compute Node and its running task(s) if the Pool size is
decreasing. The default value is requeue. Possible values include:
'requeue', 'terminate', 'taskCompletion', 'retainedData'</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolResizeOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_resize" data-uid="Pool#resize">resize(poolId, poolResizeParameter, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Changes the number of Compute Nodes that are assigned to a Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">You can only resize a Pool when its allocation state is steady. If the Pool
is already resizing, the request fails with status code 409. When you resize
a Pool, the Pool's allocation state changes from steady to resizing. You
cannot resize Pools which are configured for automatic scaling. If you try
to do this, the Batch service returns an error 409. If you resize a Pool
downwards, the Batch service chooses which Compute Nodes to remove. To
remove specific Compute Nodes, use the Pool remove Compute Nodes API
instead.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function resize(poolId, poolResizeParameter, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to resize.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolResizeParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetDedicatedNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired
number of dedicated Compute Nodes in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">number</span></td>
                <td><em class="text-break">targetLowPriorityNodes</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The desired
number of low-priority Compute Nodes in the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for
allocation of Nodes to the Pool or removal of Compute Nodes from the Pool.
The default value is 15 minutes. The minimum value is 5 minutes. If you
specify a value less than 5 minutes, the Batch service returns an error; if
you are calling the REST API directly, the HTTP status code is 400 (Bad
Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">nodeDeallocationOption</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Determines what
to do with a Compute Node and its running task(s) if the Pool size is
decreasing. The default value is requeue. Possible values include:
'requeue', 'terminate', 'taskCompletion', 'retainedData'</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolResizeOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_stopResizeWithHttpOperationResponse" data-uid="Pool#stopResizeWithHttpOperationResponse">stopResizeWithHttpOperationResponse(poolId, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Stops an ongoing resize operation on the Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This does not restore the Pool to its previous state before the resize
operation: it only stops any further changes being made, and the Pool
maintains its current state. After stopping, the Pool stabilizes at the
number of Compute Nodes it was at when the stop operation was done. During
the stop operation, the Pool allocation state changes first to stopping and
then to steady. A resize operation need not be an explicit resize Pool
request; this API can also be used to halt the initial sizing of the Pool
when it is created.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function stopResizeWithHttpOperationResponse(poolId, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool whose resizing you want to stop.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolStopResizeOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_stopResize" data-uid="Pool#stopResize">stopResize(poolId, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Stops an ongoing resize operation on the Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This does not restore the Pool to its previous state before the resize
operation: it only stops any further changes being made, and the Pool
maintains its current state. After stopping, the Pool stabilizes at the
number of Compute Nodes it was at when the stop operation was done. During
the stop operation, the Pool allocation state changes first to stopping and
then to steady. A resize operation need not be an explicit resize Pool
request; this API can also be used to halt the initial sizing of the Pool
when it is created.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function stopResize(poolId, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool whose resizing you want to stop.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolStopResizeOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_updatePropertiesWithHttpOperationResponse" data-uid="Pool#updatePropertiesWithHttpOperationResponse">updatePropertiesWithHttpOperationResponse(poolId, poolUpdatePropertiesParameter, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Updates the properties of the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This fully replaces all the updatable properties of the Pool. For example,
if the Pool has a StartTask associated with it and if StartTask is not
specified with this request, then the Batch service will remove the existing
StartTask.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function updatePropertiesWithHttpOperationResponse(poolId, poolUpdatePropertiesParameter, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to update.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolUpdatePropertiesParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the
request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task to run on
each Compute Node as it joins the Pool. The Task runs when the Compute Node
is added to the Pool or when the Compute Node is restarted. If this element
is present, it overwrites any existing StartTask. If omitted, any existing
StartTask is removed from the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Certificates to be installed on each Compute Node in the Pool. This list
replaces any existing Certificate references configured on the Pool. If you
specify an empty collection, any existing Certificate references are removed
from the Pool. For Windows Nodes, the Batch service installs the
Certificates to the specified Certificate store and location. For Linux
Compute Nodes, the Certificates are stored in a directory inside the Task
working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
supplied to the Task to query for this location. For Certificates with
visibility of 'remoteUser', a 'certs' directory is created in the user's
home directory (e.g., /home/{user-name}/certs) and Certificates are placed
in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Application Packages to be installed on each Compute Node in the
Pool. The list replaces any existing Application Package references on the
Pool. Changes to Application Package references affect all new Compute Nodes
joining the Pool, but do not affect Compute Nodes that are already in the
Pool until they are rebooted or reimaged. There is a maximum of 10
Application Package references on any given Pool. If omitted, or if you
specify an empty collection, any existing Application Packages references
are removed from the Pool. A maximum of 10 references may be specified on a
given Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value
pairs associated with the Pool as metadata. This list replaces any existing
metadata configured on the Pool. If omitted, or if you specify an empty
collection, any existing metadata is removed from the Pool.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolUpdatePropertiesOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_updateProperties" data-uid="Pool#updateProperties">updateProperties(poolId, poolUpdatePropertiesParameter, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Updates the properties of the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This fully replaces all the updatable properties of the Pool. For example,
if the Pool has a StartTask associated with it and if StartTask is not
specified with this request, then the Batch service will remove the existing
StartTask.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function updateProperties(poolId, poolUpdatePropertiesParameter, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool to update.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>poolUpdatePropertiesParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the
request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">startTask</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A Task to run on
each Compute Node as it joins the Pool. The Task runs when the Compute Node
is added to the Pool or when the Compute Node is restarted. If this element
is present, it overwrites any existing StartTask. If omitted, any existing
StartTask is removed from the Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">certificateReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of
Certificates to be installed on each Compute Node in the Pool. This list
replaces any existing Certificate references configured on the Pool. If you
specify an empty collection, any existing Certificate references are removed
from the Pool. For Windows Nodes, the Batch service installs the
Certificates to the specified Certificate store and location. For Linux
Compute Nodes, the Certificates are stored in a directory inside the Task
working directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is
supplied to the Task to query for this location. For Certificates with
visibility of 'remoteUser', a 'certs' directory is created in the user's
home directory (e.g., /home/{user-name}/certs) and Certificates are placed
in that directory.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">applicationPackageReferences</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The list of Application Packages to be installed on each Compute Node in the
Pool. The list replaces any existing Application Package references on the
Pool. Changes to Application Package references affect all new Compute Nodes
joining the Pool, but do not affect Compute Nodes that are already in the
Pool until they are rebooted or reimaged. There is a maximum of 10
Application Package references on any given Pool. If omitted, or if you
specify an empty collection, any existing Application Packages references
are removed from the Pool. A maximum of 10 references may be specified on a
given Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">metadata</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list of name-value
pairs associated with the Pool as metadata. This list replaces any existing
metadata configured on the Pool. If omitted, or if you specify an empty
collection, any existing metadata is removed from the Pool.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolUpdatePropertiesOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_removeNodesWithHttpOperationResponse" data-uid="Pool#removeNodesWithHttpOperationResponse">removeNodesWithHttpOperationResponse(poolId, nodeRemoveParameter, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Removes Compute Nodes from the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This operation can only run when the allocation state of the Pool is steady.
When this operation runs, the allocation state changes from steady to
resizing.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function removeNodesWithHttpOperationResponse(poolId, nodeRemoveParameter, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool from which you want to remove
Compute Nodes.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>nodeRemoveParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">nodeList</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list containing the IDs of the
Compute Nodes to be removed from the specified Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for
removal of Compute Nodes to the Pool. The default value is 15 minutes. The
minimum value is 5 minutes. If you specify a value less than 5 minutes, the
Batch service returns an error; if you are calling the REST API directly,
the HTTP status code is 400 (Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">nodeDeallocationOption</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Determines what
to do with a Compute Node and its running task(s) after it has been selected
for deallocation. The default value is requeue. Possible values include:
'requeue', 'terminate', 'taskCompletion', 'retainedData'</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolRemoveNodesOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_removeNodes" data-uid="Pool#removeNodes">removeNodes(poolId, nodeRemoveParameter, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Removes Compute Nodes from the specified Pool.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="3">This operation can only run when the allocation state of the Pool is steady.
When this operation runs, the allocation state changes from steady to
resizing.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function removeNodes(poolId, nodeRemoveParameter, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>poolId</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The ID of the Pool from which you want to remove
Compute Nodes.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>nodeRemoveParameter</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The parameters for the request.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">array</span></td>
                <td><em class="text-break">nodeList</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A list containing the IDs of the
Compute Nodes to be removed from the specified Pool.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">moment.duration</span></td>
                <td><em class="text-break">resizeTimeout</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The timeout for
removal of Compute Nodes to the Pool. The default value is 15 minutes. The
minimum value is 5 minutes. If you specify a value less than 5 minutes, the
Batch service returns an error; if you are calling the REST API directly,
the HTTP status code is 400 (Bad Request).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">nodeDeallocationOption</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Determines what
to do with a Compute Node and its running task(s) after it has been selected
for deallocation. The default value is requeue. Possible values include:
'requeue', 'terminate', 'taskCompletion', 'retainedData'</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolRemoveNodesOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listUsageMetricsNextWithHttpOperationResponse" data-uid="Pool#listUsageMetricsNextWithHttpOperationResponse">listUsageMetricsNextWithHttpOperationResponse(nextPageLink, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists the usage metrics, aggregated by Pool across individual time
intervals, for the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">If you do not specify a $filter clause including a poolId, the response
includes all Pools that existed in the Account in the time range of the
returned aggregation intervals. If you do not specify a $filter clause
including a startTime or endTime these filters default to the start and end
times of the last aggregation interval currently available; that is, only
the last aggregation interval is returned.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listUsageMetricsNextWithHttpOperationResponse(nextPageLink, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListUsageMetricsNextOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listUsageMetricsNext" data-uid="Pool#listUsageMetricsNext">listUsageMetricsNext(nextPageLink, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists the usage metrics, aggregated by Pool across individual time
intervals, for the specified Account.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">If you do not specify a $filter clause including a poolId, the response
includes all Pools that existed in the Account in the time range of the
returned aggregation intervals. If you do not specify a $filter clause
including a startTime or endTime these filters default to the start and end
times of the last aggregation interval currently available; that is, only
the last aggregation interval is returned.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listUsageMetricsNext(nextPageLink, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListUsageMetricsNextOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listNextWithHttpOperationResponse" data-uid="Pool#listNextWithHttpOperationResponse">listNextWithHttpOperationResponse(nextPageLink, options)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists all of the Pools in the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listNextWithHttpOperationResponse(nextPageLink, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListNextOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="Pool_listNext" data-uid="Pool#listNext">listNext(nextPageLink, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Lists all of the Pools in the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listNext(nextPageLink, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">poolListNextOptions</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Additional parameters for the
operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p sourcefile="yml/Pool.yml" sourcestartlinenumber="1">If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p sourcefile="yml/Pool.yml" sourcestartlinenumber="4">{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
