<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class CertificateOperations
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class CertificateOperations
   ">
    <meta name="generator" content="docfx 2.58.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="CertificateOperations">
  
  
  <h1 id="CertificateOperations" data-uid="CertificateOperations">Class CertificateOperations
  </h1>
  <div class="markdown level0 summary"><p>Class representing a CertificateOperations.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <h4 id="CertificateOperations__ctor" data-uid="CertificateOperations.#ctor">CertificateOperations(client)</h4>
  <div class="markdown level1 summary"><p>Create a CertificateOperations.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">new CertificateOperations(client)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">undefinedBatchServiceClient</span></td>
        <td><em>client</em></td>
        <td>
          <p>Reference to the service client.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h3 id="functions">Functions
  </h3>
  
  
  <h4 id="CertificateOperations_addWithHttpOperationResponse" data-uid="CertificateOperations#addWithHttpOperationResponse">addWithHttpOperationResponse(certificate, options)</h4>
  <div class="markdown level1 summary"><p>Adds a Certificate to the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function addWithHttpOperationResponse(certificate, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>certificate</em></td>
        <td>
          <p>The Certificate to be added.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">thumbprint</em></td>
                <td>
                  <p>The X.509 thumbprint of the
Certificate. This is a sequence of up to 40 hex digits (it may include
spaces but these are removed).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">thumbprintAlgorithm</em></td>
                <td>
                  <p>The algorithm used to derive
the thumbprint. This must be sha1.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">data</em></td>
                <td>
                  <p>The base64-encoded contents of the
Certificate. The maximum size is 10KB.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">certificateFormat</em></td>
                <td>
                  <p>The format of the
Certificate data. Possible values include: 'pfx', 'cer'</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">password</em></td>
                <td>
                  <p>The password to access the
Certificate's private key. This must be omitted if the Certificate format is
cer.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateAddOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_add" data-uid="CertificateOperations#add">add(certificate, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Adds a Certificate to the specified Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function add(certificate, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>certificate</em></td>
        <td>
          <p>The Certificate to be added.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">thumbprint</em></td>
                <td>
                  <p>The X.509 thumbprint of the
Certificate. This is a sequence of up to 40 hex digits (it may include
spaces but these are removed).</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">thumbprintAlgorithm</em></td>
                <td>
                  <p>The algorithm used to derive
the thumbprint. This must be sha1.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">data</em></td>
                <td>
                  <p>The base64-encoded contents of the
Certificate. The maximum size is 10KB.</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">certificateFormat</em></td>
                <td>
                  <p>The format of the
Certificate data. Possible values include: 'pfx', 'cer'</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">string</span></td>
                <td><em class="text-break">password</em></td>
                <td>
                  <p>The password to access the
Certificate's private key. This must be omitted if the Certificate format is
cer.</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateAddOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_listWithHttpOperationResponse" data-uid="CertificateOperations#listWithHttpOperationResponse">listWithHttpOperationResponse(options)</h4>
  <div class="markdown level1 summary"><p>Lists all of the Certificates that have been added to the specified
Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listWithHttpOperationResponse(options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateListOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_list" data-uid="CertificateOperations#list">list(options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Lists all of the Certificates that have been added to the specified
Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function list(options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateListOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_cancelDeletionWithHttpOperationResponse" data-uid="CertificateOperations#cancelDeletionWithHttpOperationResponse">cancelDeletionWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</h4>
  <div class="markdown level1 summary"><p>Cancels a failed deletion of a Certificate from the specified
Account.</p>
<p>If you try to delete a Certificate that is being used by a Pool or Compute
Node, the status of the Certificate changes to deleteFailed. If you decide
that you want to continue using the Certificate, you can use this operation
to set the status of the Certificate back to active. If you intend to delete
the Certificate, you do not need to run this operation after the deletion
failed. You must make sure that the Certificate is not being used by any
resources, and then you can try again to delete the Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function cancelDeletionWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate being deleted.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateCancelDeletionOptions</em></td>
                <td>
                  <p>Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_cancelDeletion" data-uid="CertificateOperations#cancelDeletion">cancelDeletion(thumbprintAlgorithm, thumbprint, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Cancels a failed deletion of a Certificate from the specified
Account.</p>
<p>If you try to delete a Certificate that is being used by a Pool or Compute
Node, the status of the Certificate changes to deleteFailed. If you decide
that you want to continue using the Certificate, you can use this operation
to set the status of the Certificate back to active. If you intend to delete
the Certificate, you do not need to run this operation after the deletion
failed. You must make sure that the Certificate is not being used by any
resources, and then you can try again to delete the Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function cancelDeletion(thumbprintAlgorithm, thumbprint, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate being deleted.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateCancelDeletionOptions</em></td>
                <td>
                  <p>Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_deleteMethodWithHttpOperationResponse" data-uid="CertificateOperations#deleteMethodWithHttpOperationResponse">deleteMethodWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</h4>
  <div class="markdown level1 summary"><p>Deletes a Certificate from the specified Account.</p>
<p>You cannot delete a Certificate if a resource (Pool or Compute Node) is
using it. Before you can delete a Certificate, you must therefore make sure
that the Certificate is not associated with any existing Pools, the
Certificate is not installed on any Nodes (even if you remove a Certificate
from a Pool, it is not removed from existing Compute Nodes in that Pool
until they restart), and no running Tasks depend on the Certificate. If you
try to delete a Certificate that is in use, the deletion fails. The
Certificate status changes to deleteFailed. You can use Cancel Delete
Certificate to set the status back to active if you decide that you want to
continue using the Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function deleteMethodWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate to be deleted.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateDeleteMethodOptions</em></td>
                <td>
                  <p>Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_deleteMethod" data-uid="CertificateOperations#deleteMethod">deleteMethod(thumbprintAlgorithm, thumbprint, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Deletes a Certificate from the specified Account.</p>
<p>You cannot delete a Certificate if a resource (Pool or Compute Node) is
using it. Before you can delete a Certificate, you must therefore make sure
that the Certificate is not associated with any existing Pools, the
Certificate is not installed on any Nodes (even if you remove a Certificate
from a Pool, it is not removed from existing Compute Nodes in that Pool
until they restart), and no running Tasks depend on the Certificate. If you
try to delete a Certificate that is in use, the deletion fails. The
Certificate status changes to deleteFailed. You can use Cancel Delete
Certificate to set the status back to active if you decide that you want to
continue using the Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function deleteMethod(thumbprintAlgorithm, thumbprint, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate to be deleted.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateDeleteMethodOptions</em></td>
                <td>
                  <p>Additional
parameters for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_getWithHttpOperationResponse" data-uid="CertificateOperations#getWithHttpOperationResponse">getWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</h4>
  <div class="markdown level1 summary"><p>Gets information about the specified Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function getWithHttpOperationResponse(thumbprintAlgorithm, thumbprint, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateGetOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_get" data-uid="CertificateOperations#get">get(thumbprintAlgorithm, thumbprint, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Gets information about the specified Certificate.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function get(thumbprintAlgorithm, thumbprint, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprintAlgorithm</em></td>
        <td>
          <p>The algorithm used to derive the
thumbprint parameter. This must be sha1.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>thumbprint</em></td>
        <td>
          <p>The thumbprint of the Certificate to get.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateGetOptions</em></td>
                <td>
                  <p>Additional parameters for
the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_listNextWithHttpOperationResponse" data-uid="CertificateOperations#listNextWithHttpOperationResponse">listNextWithHttpOperationResponse(nextPageLink, options)</h4>
  <div class="markdown level1 summary"><p>Lists all of the Certificates that have been added to the specified
Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listNextWithHttpOperationResponse(nextPageLink, options)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p>The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateListNextOptions</em></td>
                <td>
                  <p>Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">Promise</span></td>
        <td><p>A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="CertificateOperations_listNext" data-uid="CertificateOperations#listNext">listNext(nextPageLink, options, optionalCallback)</h4>
  <div class="markdown level1 summary"><p>Lists all of the Certificates that have been added to the specified
Account.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-js hljs">function listNext(nextPageLink, options, optionalCallback)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><em>nextPageLink</em></td>
        <td>
          <p>The NextLink from the previous successful call
to List operation.</p>

          
        </td>
      </tr>
      <tr>
        <td><span class="xref">object</span></td>
        <td><em>options</em></td>
        <td>
          <p>Optional Parameters.</p>

          
          <h6 class="parameters">Properties</h6>
          <table class="table table-bordered table-striped table-condensed">
            <thead>
              <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">certificateListNextOptions</em></td>
                <td>
                  <p>Additional parameters
for the operation</p>

                        </td>
              </tr>
              <tr>
                <td><span class="xref">object</span></td>
                <td><em class="text-break">customHeaders</em></td>
                <td>
                  <p>Headers that will be added to the
request</p>

                        </td>
              </tr>
            </tbody>
          </table>
        </td>
      </tr>
      <tr>
        <td><span class="xref">function</span></td>
        <td><em>optionalCallback</em></td>
        <td>
          <p>The optional callback.</p>

          
        </td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">function</span></td>
        <td><p>If a callback was passed as the last parameter
then it returns the callback else returns a Promise.</p>
<p>{Promise} A promise is returned</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
